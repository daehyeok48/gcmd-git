# lammps input file 
#===========================================================
# Description of system
# solvent primitive model
# LJ solvent + monovalent salt of same size
# this is bulk system
# version date: Feb. 14, 2022
#===========================================================
# 24 Sep, 2024
# Edit by Daehyeok Kim
# Kim group at KENTECH
#===========================================================

#===========================================================
# VARIABLES TO EDIT
#===========================================================
variable      filename        	index   spm_lj
variable      log_name        	index   ${filename}.log
#===========================================================
variable      nSteps_prod     	index   5000000	# production run
variable      nSteps_equi     	index   500000	# equilibration run
variable      nSteps_highT     	index   500000	# equi at high temp
variable      coords_freq     	index   1000
variable      thermo_freq     	index   2000
variable      rattle_freq     	equal   ${thermo_freq}*10
variable      restart_freq    	equal   ${nSteps_prod}/5
#===========================================================
# CHANGE THIS PART
#===========================================================
variable      vseed       	index   733512
variable      vseedc          	index   1467
variable      vseeda           	index   92643
variable      vseeds		index	2334
# NUMBER OF IONS TO INSERT
variable	new_ions	equal	40
#===========================================================

# dielectric constant
dielectric 1
#===========================================================
# SYSTEM VARIABLES
#===========================================================
variable      data_name       	index   ${filename}.end.data
variable      data_restart    	index   ${filename}.end.restart
#variable      settings_name   	index   ${filename}.in.settings
# Change the name of the log output #
log ${log_name}

#===========================================================
# GENERAL PROCEDURES
#===========================================================
units		lj	    # g/mol, angstroms, fs, kcal/mol, K, atm, charge*angstrom
dimension	3	    # 3 dimensional simulation
#newton		off	    # use Newton's 3rd law
boundary	p p p	# perodic boundary conditions 
atom_style  charge  # molecular + charge
# this is ESSENTIAL for lj system
atom_modify map array

#===========================================================
# Back to full Long-range Coulomb
#===========================================================
pair_style     lj/cut/coul/long 2.5 3.5
pair_modify    shift yes tail no mix arithmetic # L-B mixing rule
kspace_style   pppm 0.0001

#===========================================================
# read restart
#===========================================================
#read_restart _spm_lj.restart.8400000
read_data   _restart_end_run.data

# LJ interation epsilon sigma cutoff
pair_coeff *    *   1.0 1.0
pair_coeff 4*5  4*5 0   0

#===========================================================
# Delete all ions&solvents present in the currenmt system 
#===========================================================
group ions      type 1 2 3
delete_atoms group ions
group ions	delete

change_box all x scale 1.2 y scale 1.2 z scale 1.2 # remap

#===========================================================
# add ion molecules for r=0.4 system
#===========================================================
create_atoms 2 random ${new_ions} ${vseedc} 	NULL
create_atoms 3 random ${new_ions} ${vseeda} 	NULL

# set charge for ions
set type 2 charge  1.0      # cation
set type 3 charge -1.0      # anion

# groups
group solvent   type 1
group ions      type 2 3
group moving    union solvent ions

# define mass
mass	* 1.0
print "add ion molecules successfully"

# minimize energy to prevent overlapping atoms
minimize 0.0 1.0e-8 10000 100000
print "energy minimization end"

# very short equilibration
fix 1 all nve/limit 0.1
run 2000
unfix 1
print "very short eq end"

#===========================================================
# SET OUTPUTS
#===========================================================
thermo_style    custom step temp atoms  density etotal pe ke ecoul evdwl elong enthalpy press
thermo_modify   norm no format float %12.6f
thermo ${thermo_freq}

#===========================================================
# SET RUN PARAMETERS
#===========================================================
variable        timestep        equal   0.001
timestep        ${timestep}         # fs
run_style       verlet              # Velocity-Verlet integrator

variable        damp_temp       equal   ${timestep}*100.0
variable        damp_prss       equal   ${timestep}*1000.0

#===========================================================
# equilibration 
#===========================================================
#neighbor 0.5 bin
# if computation clashes, use a lower delay: e.g. 10->5->2
neigh_modify delay 1 every 1 check yes #page 5000 one 50

reset_timestep 0

print "neighbor check end"

# npt at high temp
velocity all create 1.5 ${vseed} rot yes sum yes mom yes dist gaussian
fix 1 		moving 	npt temp 1.5 1.5 ${damp_temp} iso 1.0 1.0 ${damp_prss}
fix mom2	moving  momentum 1000 linear 1 1 1


run ${nSteps_highT}
unfix mom2

fix mom2	moving  momentum 50000 linear 1 1 1
velocity all create 1.0 ${vseed} rot yes sum yes mom yes dist gaussian

# npt
unfix 1
fix 1 		moving 	npt temp 1.0 1.0 ${damp_temp} iso 1.0 1.0 ${damp_prss}
run ${nSteps_equi}

print "npt eq run end"

#restart ${restart_freq} ${filename}.restart.*
#===========================================================
# DUMP TRAJECTORY
#===========================================================
dump            prod all custom ${coords_freq} ${filename}.lammpstrj id type xu yu zu
#dump_modify     prod scale no
dump_modify     prod sort  id
print "dump end"

#===========================================================
# PRODUCTION RUN
#===========================================================
run ${nSteps_prod}

unfix 1
unfix mom2

print "production run end"
#===========================================================

write_data ${data_name}
